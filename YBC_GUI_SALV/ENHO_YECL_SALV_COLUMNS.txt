New Methods:
HAS_EDITABLE	Instance Method	Public
SET_EDITABLE	Instance Method	Public
SET_TECHNICAL_TEXTS	Instance Method	Public



Method parameters HAS_EDITABLE:
RESULT	Returning	Type	ABAP_BOOL



Method parameters SET_EDITABLE:
I_VALUE	Importing	Type	ABAP_BOOL		preferred
I_KEYS	Importing	Type	ABAP_BOOL	TRUE



METHOD has_editable .

  DATA: ls_column TYPE REF TO salv_s_column_ref
      .


  LOOP AT t_columns REFERENCE INTO ls_column.
    result = ls_column->r_column->is_editable( ).
    IF result EQ abap_true.
      RETURN.
    ENDIF.
  ENDLOOP.

ENDMETHOD.



METHOD set_editable .

  DATA: lv_keys TYPE abap_bool
      , ls_column TYPE REF TO salv_s_column_ref
      , lo_column TYPE REF TO cl_salv_column_list
      .


  lv_keys = i_keys.
  LOOP AT t_columns REFERENCE INTO ls_column.
    IF lv_keys NE abap_true.
      TRY.
          lo_column ?= ls_column->r_column.
          IF lo_column->is_key( ) EQ abap_true.
            CONTINUE.
          ENDIF.

        CATCH cx_sy_move_cast_error.
          lv_keys = abap_true.
      ENDTRY.
    ENDIF.

    ls_column->r_column->set_editable( i_value ).
  ENDLOOP.

ENDMETHOD.



METHOD set_technical_texts .

  DATA: ls_column TYPE REF TO salv_s_column_ref
      .


  LOOP AT t_columns REFERENCE INTO ls_column.
    ls_column->r_column->set_text( ls_column->columnname ).
  ENDLOOP.

ENDMETHOD.