New interfaces:
YIF_SALV_EVENTS_TABLE



New attributes:
R_CHANGES	Instance Attribute	Private	Type Ref To	YCL_SALV_CHANGES



New methods:
RAISE_AFTER_DATA_CHANGE	Instance Method	Private
RAISE_BEFORE_DATA_CHANGE	Instance Method	Private
RAISE_GRID_CREATED	Instance Method	Private



Method parameters RAISE_AFTER_DATA_CHANGE:
ET_GOOD_CELLS	Importing	Type	LVC_T_MODI



Method parameters RAISE_BEFORE_DATA_CHANGE:
ER_DATA_CHANGED	Importing	Type Ref To	CL_ALV_CHANGED_DATA_PROTOCOL
E_ONF4	Importing	Type	CHAR01
E_ONF4_BEFORE	Importing	Type	CHAR01
E_ONF4_AFTER	Importing	Type	CHAR01



Method parameters RAISE_GRID_CREATED:
I_GRID	Importing	Type Ref To	CL_GUI_ALV_GRID



METHOD raise_after_data_change .

  IF et_good_cells IS NOT INITIAL AND r_changes IS BOUND.
    r_changes->_on_after_data_change( ).

    IF r_changes->has_changes( ) EQ abap_true.
      RAISE EVENT yif_salv_events_table~after_data_change
        EXPORTING
          i_changes = r_changes.
    ENDIF.
  ENDIF.

  FREE r_changes.

ENDMETHOD.



METHOD raise_before_data_change .

  IF er_data_changed->mt_mod_cells IS NOT INITIAL.
    TRY.
        IF r_changes IS INITIAL.
          CREATE OBJECT r_changes
            EXPORTING
              i_events = me.
        ENDIF.

        CALL METHOD r_changes->_on_before_data_change
          EXPORTING
            i_protocol    = er_data_changed
            i_onf4        = e_onf4
            i_onf4_before = e_onf4_before
            i_onf4_after  = e_onf4_after.

        IF r_changes->has_changes( ) EQ abap_true.
          RAISE EVENT yif_salv_events_table~before_data_change
            EXPORTING
              i_changes = r_changes.
        ENDIF.

      CATCH cx_sy_ref_is_initial.                       "#EC NO_HANDLER
    ENDTRY.
  ENDIF.

ENDMETHOD.



METHOD raise_grid_created .

  SET HANDLER raise_after_data_change FOR i_grid.
  SET HANDLER raise_before_data_change FOR i_grid.

  RAISE EVENT yif_salv_events_table~grid_created
    EXPORTING
      i_grid = i_grid.

ENDMETHOD.